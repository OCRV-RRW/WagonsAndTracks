Path = require("main.classes.path")

local function get_destination_pos(self, collision_object_id)
	local destination_point_id = self.obj:get_destination_point(collision_object_id)
	msg.post(msg.url(destination_point_id), 'disable_collision')
	return go.get_world_position(destination_point_id)
end

local function get_help_pos(self)
	return go.get_world_position(go.get_id('help_point'))
end

function init(self)
	local path_point = go.get_id('path_point')
	local path_point1 = go.get_id('path_point1')
	msg.post(path_point, 'set_path')
	msg.post(path_point1, 'set_path')
	self.obj = Path(path_point, path_point1, {path_point1})
	self.enter = false
end

function final(self)
	self.obj = nil
end

function update(self, dt)
end

function fixed_update(self, dt)
end

function on_message(self, message_id, message, sender)
	if message_id == hash("on_wagon_collision") then
		msg.post(message.wagon, 'set_destination_pos', {destination_pos = get_destination_pos(self, message.go_id), 
			help_pos = get_help_pos(self)})
	end
end

function on_input(self, action_id, action)
end

function on_reload(self)
end
